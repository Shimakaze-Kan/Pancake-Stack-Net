<UserControl x:Class="IDE.Views.EditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IDE.Views"
             xmlns:viewmodel="clr-namespace:IDE.ViewModels"
             xmlns:converter="clr-namespace:IDE.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <converter:BoolToVisiblilityConverter x:Key="BoolToVisiblilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>


        <Grid Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" 
                    Grid.ColumnSpan="2" 
                    Grid.RowSpan="2" 
                    Panel.ZIndex="1"
                    BorderThickness="1"
                    BorderBrush="#ABADB3">
                <ScrollViewer VerticalScrollBarVisibility="Visible" Grid.Column="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <ItemsControl Grid.Column="0" 
                                  ItemsSource="{Binding Editor.Document.LineNumber}" 
                                  FontFamily="{Binding Editor.Format.Family}" 
                                  FontSize="{Binding Editor.Format.Size}" 
                                  Foreground="#258FAD" Background="#161616">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" HorizontalAlignment="Right" Margin="10,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBox Grid.Column="1"
                                 BorderThickness="0"
                                 VerticalScrollBarVisibility="Hidden"
                                 DataContext="{Binding Editor}"
                                 FontFamily="{Binding Format.Family}"
                                 FontSize="{Binding Format.Size}"
                                 FontStyle="{Binding Format.Style}"
                                 FontWeight="{Binding Format.Weight}"
                                 TextWrapping="{Binding Format.Wrap}"
                                 AcceptsReturn="True"
                                 AcceptsTab="True"
                                 Background="#25292C"
                                 Foreground="White"
                                 Padding="5,0"
                                 Text="{Binding Document.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </ScrollViewer>
            </Border>

            <Border Grid.Column="1" Grid.Row="0" BorderThickness="1" Background="#252526" BorderBrush="#FF9912" Panel.ZIndex="1" Visibility="{Binding Replace.Replace.IsVisible, Converter={StaticResource BoolToVisiblilityConverter}}">
                <Grid Margin="10,0,10,10" Width="200">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Button Grid.Column="1" Grid.Row="0" Margin="10,0,-10,10" Content="✕" Style="{StaticResource BlackButton}" Command="{Binding Replace.ChangeVisiblilityOfReplaceWindowCommand}"/>
                    <TextBox Grid.ColumnSpan="2" Grid.Row="1" Margin="0,0,0,10" Foreground="White" Background="#25292C" Style="{StaticResource OrangeBorderTextBox}" Text="{Binding Replace.Replace.TextToReplace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Grid.ColumnSpan="2" Grid.Row="2" Margin="0,0,0,10" Foreground="White" Background="#25292C" Style="{StaticResource OrangeBorderTextBox}" Text="{Binding Replace.Replace.TextAfterReplace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <StackPanel Grid.Column="0" Grid.Row="3" VerticalAlignment="Center">
                        <CheckBox Content="Use Regex" IsChecked="{Binding Replace.Replace.IsRegex, Mode=TwoWay}" Style="{StaticResource BlackCheckBox}"/>
                    </StackPanel>
                    <Button Grid.Column="1" Grid.Row="3" Content="Replace" Style="{StaticResource BlackButton}" Command="{Binding Replace.ReplaceTextCommand}"/>

                </Grid>
            </Border>
        </Grid>

        <GridSplitter Grid.Column="1"
              HorizontalAlignment="Center"
              VerticalAlignment="Stretch"
              Background="Black" 
              ShowsPreview="True"
              Width="5"
              />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Text="List of instructions" FontSize="20" Background="#252526" Foreground="White"/>

            <ListView Grid.Row="1" SelectedItem="{Binding Editor.HelpBoxInstruction}" Background="#252526" Foreground="White">
                <ListViewItem Content='Put this X pancake on top!' ToolTip='Push the word length of X on top of the stack, i.e. "wonderful" would push 9.'/>
                <ListViewItem Content='Eat the pancake on top!' ToolTip='Pop the top value off of the stack, and discard it.'/>
                <ListViewItem Content='Put the top pancakes together!' ToolTip='Pop off the top two values, add them, and push the result.'/>
                <ListViewItem Content='Give me a pancake!' ToolTip='Input a number value and push it on the stack.'/>
                <ListViewItem Content='How about a hotcake?' ToolTip='Input an ASCII character and push its value on the stack.'/>
                <ListViewItem Content='Show me a pancake!' ToolTip="Output the top value on the stack as an ASCII character, but don't pop it."/>
                <ListViewItem Content='Show me a numeric pancake!' ToolTip="Output the top value on the stack as a number, but don't pop it."/>
                <ListViewItem Content='Take from the top pancakes!' ToolTip='Pop off the top two values, subtract the second one from the first one, and push the result.'/>
                <ListViewItem Content='Flip the pancakes on top!' ToolTip='Pop off the top two values, swap them, and push them back.'/>
                <ListViewItem Content='Put another pancake on top!' ToolTip='Pop off the top value and push it twice.'/>
                <ListViewItem Content='[label]' ToolTip='Defines a label to go back to (Can also define a comment, if needed). When you go back to the label, it goes to the line number (1 indexed) of the top value of the stack when the label was defined.'/>
                <ListViewItem Content="If the pancake isn't tasty, go over to &quot;label&quot;." ToolTip='Go to label [label] if the top value is 0.'/>
                <ListViewItem Content='If the pancake is tasty, go over to "label".' ToolTip='Same as above, except go if the top value is not 0.'/>
                <ListViewItem Content='Put syrup on the pancakes!' ToolTip='Increment all stack values.'/>
                <ListViewItem Content='Put butter on the pancakes!' ToolTip='Increment only the top stack value.'/>
                <ListViewItem Content='Take off the syrup!' ToolTip='Decrement all stack values.'/>
                <ListViewItem Content='Take off the butter!' ToolTip='Decrement only the top stack value.'/>
                <ListViewItem Content='Eat all of the pancakes!' ToolTip='Terminate the program. '/>

            </ListView>
        </Grid>
    </Grid>
</UserControl>
